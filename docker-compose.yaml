version: '3'

networks:
  apibookstore:
    driver: bridge

services:
  cache:
    container_name: cache
    image: redis:latest
    volumes:
      - ./configs/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - ${CACHE_PORT}:${CACHE_PORT}
    networks:
      - apibookstore
    command: redis-server --bind 0.0.0.0 --port $CACHE_PORT --requirepass $CACHE_PASS

  data:
    container_name: data
    image: mysql:latest
    environment:
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASS}
      - MYSQL_ROOT_PASSWORD=${DB_PASS}
      - MYSQL_DATABASE=${DB_NAME}
    volumes:
      - ${DB_DATA}=/var/lib/mysql
    expose:
      - ${DB_PORT}
    ports:
      - ${DB_PORT}:${DB_PORT}
    networks:
      - apibookstore

#  rest:
#    container_name: rest
#    image: ${API_TAG}
#    environment:
#      - API_DEV
#      - API_FORM
#      - API_HOST
#      - API_PORT
#      - API_SECRET
#      - API_KEY
#      - CACHE_DB
#      - CACHE_HOST
#      - CACHE_PORT
#      - CACHE_PASS
#      - CACHE_SECRET
#      - DB_FILE
#      - DB_TYPE
#      - DB_HOST
#      - DB_PORT
#      - DB_NAME
#      - DB_USER
#      - DB_PASS
#      - FILE_PATH
#      - GIN_MODE
#      - SMTP_HOST
#      - SMTP_PORT
#      - SMTP_USER
#      - SMTP_PASS
#      - SMTP_TEMP
#    restart: on-failure
#    depends_on:
#      - data
#      - cache
#    ports:
#      - ${API_PORT}:${API_PORT}
#    networks:
#      - apibookstore
